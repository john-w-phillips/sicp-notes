(define (list-ref items n)
  (if (= n 0)
      (car items)
      (list-ref (cdr items) (- n 1))))

(define (map proc items)
  (if (null? items)
      '()
      (cons (proc (car items)) (map proc (cdr items)))))

(define (add-lists l1 l2)
 (cond
  ((null? l1) l2)
  ((null? l2) l1)
  (else (cons (+ (car l1) (car l2))
              (add-lists (cdr l1) (cdr l2))))))

(define ones (cons 1 ones))
(define integers (cons 1 (add-lists ones integers)))